# Configuration for SIREN Flash Matching Inference with HDF5 Data
# This config uses the new FlashMatch HDF5 dataset format

torchscript: 
  device: cpu
  output_path: flashmlp_model_extbnb_deft_universe_iteration_075k.pt
  example_num_voxels: 500
  example_batch_size: 1
  
# Data Loader Configuration
dataloader:
  # File lists (can be paths to .txt files or directories)
  #valid_filelist: "inference_validation_test_dataset.txt"
  valid_filelist:  "inference_dataset_extbnb.txt"
  #valid_filelist: "filelist_mcc9_v13_mccorsika_inference.list"
  debug: True
  
  # Batch configuration
  batchsize: 16                # Batch size for training
  shuffle: false               # Shuffle training data
  num_workers: 4              # Number of data loading workers
  pin_memory: false           # Pin memory for faster GPU transfer
  persistent_workers: false   # Keep workers alive between epochs
  
  # Data augmentation
  use_mixup: false            # Use the Mix-Up data reader
  mixup_prob: 0.5             # Probability of applying MixUp (0 = disabled)
  mixup_alpha: 1.0            # Beta distribution parameter for MixUp
  augment_scale: false        # Apply random scaling augmentation
  augment_jitter: false       # Apply position jittering
  
  # Data preprocessing
  max_voxels: 500             # Maximum voxels per sample
  normalize_features: true    # Apply feature normalization
  
  # Normalization parameters (from calculate_means_vars.py)
  # only log is being used right now
  pmt_norm_params:
    transform: "linear"          # Transform type: "log", "sqrt", "none"
    offset: 0.0               # Offset after log(1 + x)
    scale: 5000.0                # Scale factor
    
  planecharge_norm_params:
    transform: "linear"          # Transform type per plane
    offset: [0.0, 0.0,0.0]   # Offsets for U, V, Y planes
    scale: [50000.0, 50000.0, 50000.0]    # Scale factors for U, V, Y planes
    
  position_norm_params:
    scale: 100.0              # Divide positions by this value
    center: true              # Center positions around detector center

# Model Configuration
model:

  # network type
  network_type: 'mlp'

  # Model weights
  checkpoint: ./checkpoints/deft_universe_checkpoint_iteration_00075000.pt # extbnb, full dataset, unbalanced sinkhorn loss (p=2,rho=1.0,eps=0.05)

  # Input embedding options
  use_cos_input_embedding_vectors: false  # Use cosine embeddings
  embedding_dim: 64                       # Dimension of embeddings

  # FlashMatchMLP configuration (for baseline/embeddings)
  mlp:
    input_nfeatures: 7                    # Input feature dimension: (x,y,z,dx,dy,dz,d)
    hidden_layer_nfeatures: [512, 512, 512, 512, 512]  # Hidden layer sizes
    dropout: 0.0                          # Dropout probability. If 0.0, no dropout used.
    activation: "relu"                    # Activation function
    norm_layer: 'batchnorm'               # Normalization choice: batch, layer
